---

---

<ul>
  <li>
    <input type="checkbox" checked>
    <i></i>
    <h2>Branding</h2>
    <p>This page wainto HTML, but someday I'll use it since its syntax compliments that of SASS. Regardless, thisSS.</p>
  </li>
  <li>
    <input type="checkbox" checked>
    <i></i>
    <h2>UI/UX</h2>
    <p>Using the sibling and checked sereen sizes.</p>
  </li>
  <li>
    <input type="checkbox" checked>
    <i></i>
    <h2>Web Development</h2>
    <p>By making the open  can ack is sis"checked" property of the input element.</p>
  </li>
  <li>
    <input type="checkbox" checked>
    <i></i>
    <h2>SEO</h2>
    <p>By making the open'm accessa cipt (if needed) by changing the "checked" property of the input element.</p>
  </li>
  <li>
    <input type="checkbox" checked>
    <i></i>
    <h2>Packaging & Logo Design</h2>
    <p>By making thwhent fallbapen accordion. The accordion can be manipulated with Javascript (if needed) by changing the "checked" property of the input element.</p>
  </li>
  <li>
    <input type="checkbox" checked>
    <i></i>
    <h2>Digital Marketing</h2>
    <p>By making thwhhisowsers that don't recognize :checked. The fallback is simply an open accordion. The accordion can be manipulated with Javascript (if needed) by changing the "checked" property of the input element.</p>
  </li>
</ul>

<style>

.transition {
  transition: all 0.25s ease-in-out;
}

.flipIn {
  animation: flipdown 0.5s ease both;
}

.no-select {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

h1,
h2 {
  color: var(--black);
}

h2 {
  font-size: 2em;
  line-height: 34px;
  font-weight: bold;
  letter-spacing: 1px;
  display: block;
  margin: 0;
  cursor: pointer;
  user-select: none;
}

/* Paragraph Styles */
p {
  color: var(--black);
  font-size: .9em;
  line-height: 26px;
  letter-spacing: 1px;
  position: relative;
  overflow: hidden;
  max-height: 800px;
  transition: all 0.25s ease-in-out;
  opacity: 1;
  transform: translate(0, 0);
  margin-top: 14px;
  z-index: 2;
}

/* List Styles */
ul {
  width: 100%;
  min-width: 30vw;
  list-style: none;
  perspective: 900;
  padding: 0;
  margin: 0;
}

li {
  font-family: "IBM Plex Sans", sans-serif;
  font-style: italic;
  position: relative;
  padding: 0;
  margin: 0;
  opacity: .4;
  padding-bottom: 4px;
  padding-top: 18px;
  border-bottom: 1px solid var(--black);
  /* animation: flipdown 0.5s ease both; */
  transition: ease .6s;
}
li:hover{
  opacity: 1;
}

li:nth-of-type(1) {
  animation-delay: 0.5s;
}

li:nth-of-type(2) {
  animation-delay: 0.75s;
}

li:nth-of-type(3) {
  animation-delay: 1.0s;
}

li:last-of-type {
  padding-bottom: 0;
  border-bottom: none;
}

li i {
  position: absolute;
  transform: translate(-6px, 0);
  margin-top: 16px;
  right: 0;
}

li i:before,
li i:after {
  content: "";
  transition: all 0.25s ease-in-out;
  position: absolute;
  background-color: var(--black);
  width: 3px;
  height: 9px;
}

li i:before {
  transform: translate(-2px, 0) rotate(45deg);
}

li i:after {
  transform: translate(2px, 0) rotate(-45deg);
}

input[type="checkbox"] {
  position: absolute;
  cursor: pointer;
  width: 100%;
  height: 100%;
  z-index: 1;
  opacity: 0;
}

input[type="checkbox"]:checked ~ p {
  margin-top: 0;
  max-height: 0;
  opacity: 0;
  transform: translate(0, 50%);
}

input[type="checkbox"]:checked ~ i:before {
  transform: translate(2px, 0) rotate(45deg);
}

input[type="checkbox"]:checked ~ i:after {
  transform: translate(-2px, 0) rotate(-45deg);
}

/* Keyframes */
@keyframes flipdown {
  0% {
    opacity: 0;
    transform-origin: top center;
    transform: rotateX(-90deg);
  }
  5% {
    opacity: 1;
  }
  80% {
    transform: rotateX(8deg);
  }
  83% {
    transform: rotateX(6deg);
  }
  92% {
    transform: rotateX(-3deg);
  }
  100% {
    transform-origin: top center;
    transform: rotateX(0deg);
  }
}
</style>